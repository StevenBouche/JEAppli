{"version":3,"sources":["views/Teams/TeamsForm.js","views/Teams/TeamsFormEdit.js","views/Teams/Teams.js","views/Items/ElementCard/index.js","views/Items/ElementCard/ElementGroup.js"],"names":["TeamsForm","state","modal","callback","undefined","name","description","this","props","clearStateForm","setState","TeamsManager","createTeam","res","json","handleClose","handleName","handleDescription","_this2","react_default","a","createElement","Modal","isOpen","toggle","ModalHeader","ModalBody","Row","Col","xs","Card","CardHeader","CardBody","FormGroup","Label","htmlFor","Input","onChange","event","target","value","type","id","placeholder","required","ModalFooter","Button","color","onClick","handleAction","bind","Component","teamData","equal","nameitem","descitem","updateTeam","key","_this3","Teams","data","modalEdit","getTeams","getData","setInterval","b","items","i","length","redirectPath","_id","push","userrole","className","ElementGroup","callbackDataSelect","updateTeamData","dataElement","callbackEdit","toggleEdit","Teams_TeamsForm","TeamsFormEdit","withRouter","ElementCard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","dataCard","idCard","classCard","item","changeElementCard","setRedirect","history","index","sm","md","lg","getId","teamid","teamUserRole","indexSelect","idSelect","dataSelect","callbackModalAdd","callbackModalEdit","stateButton","view","edit","add","delete","elements","itemsRef","updateDataselect","dataelem","stateOfButton","_this4","Items_ElementCard","notifyIdSelect","ButtonToolbar","ButtonGroup","disabled","handleView"],"mappings":"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","file":"static/js/24.0b5fa9c9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport TeamsManager from '../../service/team/TeamsManager';\n\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    Row,\n    Col,\n    CardHeader,\n    CardBody,\n    Label,\n    FormGroup,\n    Card,\n    Input } from 'reactstrap';\n    \nclass TeamsForm extends Component {\n\n    state = {\n        modal: false,\n        callback: undefined,\n        name: \"\",\n        description: \"\"\n    }\n\n    componentDidUpdate(){\n        \n        const {modal} = this.props;\n        const {callback} = this.props;\n     \n        if(modal !== this.state.modal) {\n            if(modal === false)  this.clearStateForm(); \n            this.setState({modal: modal});\n        }\n\n        if( callback !== this.state.callback) this.setState({callback: callback});\n       \n    }\n\n    handleName(name){\n        this.setState({name: name});\n       \n    }\n\n    handleDescription(description){\n        this.setState({description: description});\n    }\n\n    async handleAction(){\n\n        var res = await TeamsManager.createTeam(this.state.name,this.state.description);\n      res = await res.json();\n        this.handleClose();\n    }\n\n    clearStateForm(){\n        this.handleName(\"\");\n        this.handleDescription(\"\");\n    }\n\n    handleClose(){\n        this.clearStateForm();\n        this.state.callback();\n    }\n\n    render(){\n        return (\n            <Modal isOpen={this.state.modal} toggle={this.state.callback} >\n            <ModalHeader toggle={this.state.callback}>Teams modal</ModalHeader>\n            <ModalBody>\n            <Row>\n                <Col xs=\"12\" >\n                <Card>\n                    <CardHeader>\n                    <strong>Team</strong>\n                    <small> Form</small>\n                    </CardHeader>\n                    <CardBody>\n                    <Row>\n                        <Col xs=\"12\">\n                        <FormGroup>\n                            <Label htmlFor=\"name\">Name</Label>\n                            <Input  onChange={event => this.handleName(event.target.value)} type=\"text\" id=\"name\" placeholder=\"Enter group name\" required />\n                        </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs=\"12\">\n                        <FormGroup>\n                            <Label htmlFor=\"description\">Description</Label>\n                            <Input onChange={event => this.handleDescription(event.target.value)} type=\"text\" id=\"description\" placeholder=\"Enter group description\" required />\n                        </FormGroup>\n                        </Col>\n                    </Row>\n                    </CardBody>\n                </Card>\n                </Col>\n                </Row>\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"primary\" onClick={this.handleAction.bind(this)}>Create team</Button>{' '}\n                <Button color=\"secondary\" onClick={this.state.callback}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n        );\n    }\n}\n\nexport default TeamsForm;","import React, { Component } from 'react';\nimport TeamsManager from '../../service/team/TeamsManager';\nimport equal from 'deep-equal';\n\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    Row,\n    Col,\n    CardHeader,\n    CardBody,\n    Label,\n    FormGroup,\n    Card,\n    Input } from 'reactstrap';\n    \nclass TeamsForm extends Component {\n\n    state = {\n        modal: false,\n        callback: undefined,\n        teamData: {},\n        name: \"\",\n        description: \"\"\n    }\n\n    componentDidUpdate(){\n        const {modal} = this.props;\n        const {callback} = this.props;\n        const {teamData} = this.props;\n\n        if(modal !== this.state.modal) {\n            if(modal === false)  this.clearStateForm(); \n            this.setState({modal: modal});\n        }\n\n        if( callback !== this.state.callback) this.setState({callback: callback});\n      //  console.log(equal(this.state.teamData, teamData))\n        if( teamData !== undefined && !equal(this.state.teamData, teamData)) {\n      //      console.log(\"TEAM DATA EDDIT FORM\")\n     //   console.log(teamData);\n            this.setState({teamData: teamData},\n                ()=> {\n                    this.handleName(this.state.teamData.nameitem);\n                    this.handleDescription(this.state.teamData.descitem);\n                });  \n        }\n    }\n\n    handleName(name){\n        this.setState({ name: name});\n    }\n\n    handleDescription(description){\n        this.setState({ description: description});\n    }\n\n    async handleAction(){\n        var res = await TeamsManager.updateTeam(this.state.teamData.key, this.state.name,this.state.description);\n        res = await res.json();\n        this.handleClose();\n    }\n\n    clearStateForm(){\n        this.handleName(this.state.teamData.nameitem);\n        this.handleDescription(this.state.teamData.descitem);\n    }\n\n    handleClose(){\n        this.clearStateForm();\n        this.state.callback();\n    }\n\n    render(){\n           \n        return (\n            <Modal isOpen={this.state.modal} toggle={this.state.callback} >\n            <ModalHeader toggle={this.state.callback}>Teams modal</ModalHeader>\n            <ModalBody>\n            <Row>\n                <Col xs=\"12\" >\n                <Card>\n                    <CardHeader>\n                    <strong>Team</strong>\n                    <small> Form</small>\n                    </CardHeader>\n                    <CardBody>\n                    <Row>\n                        <Col xs=\"12\">\n                        <FormGroup>\n                            <Label htmlFor=\"name\">Name</Label>\n                            <Input  onChange={event => this.handleName(event.target.value)} value={this.state.name} type=\"text\" id=\"name\" placeholder=\"Enter group name\" required />\n                        </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs=\"12\">\n                        <FormGroup>\n                            <Label htmlFor=\"description\">Description</Label>\n                            <Input onChange={event => this.handleDescription(event.target.value)} value={this.state.description} type=\"text\" id=\"description\" placeholder=\"Enter group description\" required />\n                        </FormGroup>\n                        </Col>\n                    </Row>\n                    </CardBody>\n                </Card>\n                </Col>\n                </Row>\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"primary\" onClick={this.handleAction.bind(this)}>Edit team</Button>{' '}\n                <Button color=\"secondary\" onClick={this.state.callback}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n        );\n    }\n}\n\nexport default TeamsForm;","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport TeamsManager from '../../service/team/TeamsManager';\nimport ElementGroup from '../Items/ElementCard/ElementGroup'\nimport TeamsForm from './TeamsForm'\nimport TeamsFormEdit from './TeamsFormEdit'\nimport equal from 'deep-equal';\nimport {Card, CardHeader, CardBody } from 'reactstrap';\n\nclass Teams extends Component {\n\n  state = { \n    data: [], \n    modal: false,\n    modalEdit: false,\n    teamData: {}\n  };\n\n  async getData(){\n    var data = await TeamsManager.getTeams();\n    if(!equal(this.state.data,data)){\n        this.setState({data: data});\n    }\n  }\n\n  async componentDidMount() {\n    await this.getData();\n    setInterval(() => {this.getData()},5*60000);\n  }\n\n  async toggle(){\n    var b = this.state.modal;\n    this.setState({modal: !b});\n    if(b === true) await this.getData();\n  }\n\n  async toggleEdit(){\n    var b = false;\n    b = this.state.modalEdit;\n    this.setState({modalEdit: !b});\n    if(b === true) await this.getData();\n  }\n\n  updateTeamData(data){\n    this.setState({teamData: data});\n  }\n\n  render ()  {\n\n    var items = [];\n    var data = this.state.data;\n\n    for(var i = 0; i < data.length; i++){\n      var redirectPath = \"/team/\"+data[i]._id;\n        items.push({\n          key: data[i]._id,\n          nameitem: data[i].name,\n          descitem: data[i].description,\n          redirectPath: redirectPath,\n          userrole: data[i].userrole \n        });\n    }\n\n    return (\n      <div className=\"animated fadeIn mt-3\">\n        <Card>\n            <CardHeader>\n            <strong><h2>Your team</h2></strong>\n            </CardHeader>\n            <CardBody>\n              \n      <ElementGroup callbackDataSelect={this.updateTeamData.bind(this)} dataElement={items} callback={this.toggle.bind(this)} callbackEdit={this.toggleEdit.bind(this)}> </ElementGroup>\n       <TeamsForm modal={this.state.modal} callback={this.toggle.bind(this)}></TeamsForm>\n      <TeamsFormEdit modal={this.state.modalEdit} callback={this.toggleEdit.bind(this)} teamData={this.state.teamData}></TeamsFormEdit>\n \n            </CardBody>\n          </Card>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Teams);\n","import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Label } from 'reactstrap';\nimport {withRouter} from 'react-router-dom';\nimport equal from 'deep-equal';\n\nclass ElementCard extends Component {\n\n    state = {\n        dataCard: {},\n        idCard: undefined,\n        classCard: \"\",\n        item : undefined\n    }\n\n    getId(){\n        return this.state.dataCard.key;\n    }\n\n    changeElementCard = (value) => {\n        this.setState({\n            classCard: this.props.classCard\n        });\n    }\n\n    updateDataCard(){\n        this.setState({dataCard: this.props.dataCard});\n    }\n\n    constructor(props){\n        super(props);\n        this.index = props.index;\n        this.callback = props.callback;\n        this.state.dataCard = props.dataCard;\n    }\n\n     componentDidUpdate() {\n        const { classCard } = this.props;\n        if (this.state.classCard !== classCard) this.changeElementCard(classCard);\n        const {dataCard} = this.props;\n        if(!equal(this.state.dataCard,dataCard)) this.setState({dataCard: this.props.dataCard});\n      }\n\n    setRedirect = () => {\n        this.props.history.push(this.redirectPath);\n    }\n\n    handleClickCard(){\n        \n    }\n\n    render(){\n\n\n                /*\ndescitem: \"Desc\"\nkey: \"5db41fa83a8e232ed4ceaefe\"\nnameitem: \"FirstssUpdate\"\nredirectPath: \"/team/5db41fa83a8e232ed4ceaefe\"\nuserrole: \"viewer\"\n*/\n\n\n        return ( \n                    <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\" >    \n                     \n                    <Card onClick={() => this.callback(this.index,this.getId())} className={this.state.classCard} >\n                      <CardHeader>\n                          <Row>\n                              <Col xs=\"12\" className=\"d-flex align-items-center\"> \n                                <strong>{ this.state.dataCard.nameitem }</strong>\n                              </Col>\n                          </Row>\n                      </CardHeader>\n                      <CardBody>\n                        <Row>\n                          <Col xs=\"12\">\n                              <Label><strong>Description</strong></Label>\n                              <p>{ this.state.dataCard.descitem }</p>\n                          </Col>\n                          <Col xs=\"12\">\n                              <Label><strong>Role</strong></Label>\n                              <p>{ this.state.dataCard.userrole }</p>\n                          </Col>\n                        </Row>\n                      </CardBody>\n                    </Card>\n                  </Col>\n              \n        );\n    }\n}\n\nexport default withRouter(ElementCard);","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport ElementCard from '.';\nimport equal from 'deep-equal';\n\nimport {\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Row,\n  } from 'reactstrap';\n\nclass ElementGroup extends Component {\n\n    state = {\n      teamid: undefined,\n      teamUserRole: undefined,\n      indexSelect: undefined,\n      idSelect: undefined,\n      dataSelect: {},\n      dataElement: [],\n      callbackModalAdd: undefined,\n      callbackModalEdit: undefined,\n      stateButton: {\n        view: true,\n        edit: true,\n        add: true,\n        delete: true\n      },\n      modal: false,\n      classCard: '',\n      elements: {\n        callback: undefined,\n        items: []\n      }\n    };\n    \n    constructor(props){\n        super(props);\n        this.items = [];\n        this.itemsRef = [];\n        this.state.modal = false;\n        this.state.callbackModalAdd = props.callback;\n        this.callbackDataSelect = props.callbackDataSelect;\n        this.callbackEdit = props.callbackEdit;\n    }\n\n    notifyIdSelect(index,id){\n      if(this.state.indexSelect === index && this.state.idSelect === id) {\n        this.setState({indexSelect: undefined, idSelect: undefined},\n          () => { \n            /*this.callbackDataSelect(this.state.dataSelect)*/\n            this.updateDataselect();\n            ;});\n      }\n      else {\n        this.setState({indexSelect: index, idSelect: id},\n          () => {\n        //    this.callbackDataSelect(this.state.dataSelect); \n          //  this.stateOfButton();\n            this.updateDataselect();\n          })\n      }\n     \n    }\n\n    updateDataselect(){\n      var data = this.state.dataElement;\n      var dataelem = data[this.state.indexSelect]\n      if(!equal(dataelem,this.state.dataSelect)){\n        this.setState({dataSelect: dataelem},\n          () => {\n            this.stateOfButton();\n            this.callbackDataSelect(this.state.dataSelect);\n          });\n      }\n    }\n\n    componentDidMount(){\n      var state = {view: true, edit: true, add: false, delete: true};\n      this.setState({stateButton: state});\n    }\n\n    componentDidUpdate(){\n      const { dataElement } = this.props;\n        if (!equal(this.state.dataElement,dataElement)) {\n        //  console.log(\"CONTEXT have change\")\n          this.setState(\n            {dataElement: this.props.dataElement},  \n            () => { this.updateDataselect();}\n          );\n        }\n        const {userrole } = this.props;\n        if(this.state.teamUserRole !== userrole) {\n          this.setState({teamUserRole: userrole}, this.stateOfButton());\n        }\n    }\n\n  handleView(){\n   // console.log(this.state.dataSelect.redirectPath);\n   if(this.state.dataSelect != undefined){\n    this.props.history.push(this.state.dataSelect.redirectPath);\n   }\n  }\n\n  stateOfButton(){\n    var state = {view: true, edit: true, add: true, delete: true};\n      if(this.state.teamUserRole !== undefined){\n        if(this.state.teamUserRole === 'admin') state = {view: false, edit: false, add:false, delete: false};\n        else if(this.state.teamUserRole === 'moderator')state = {view: false, edit: false, add:false, delete: true};\n        else {\n          if(this.state.dataSelect !== undefined && this.state.teamUserRole === 'viewer'){\n            if(this.state.dataSelect.userrole === 'admin') state = {view: false, edit: false, add:true, delete: false};\n            else if(this.state.dataSelect.userrole === 'moderator') state = {view: false, edit: false, add:true, delete: true};\n            else if (this.state.dataSelect.userrole === 'viewer') state = {view: false, edit: true, add: true, delete: true};\n            else state = {view: true, edit: true, add: true, delete: true};\n          } else state = {view: true, edit: true, add: true, delete: true};\n        }\n      } else {\n        if(this.state.dataSelect !== undefined){\n            if(this.state.dataSelect.userrole === 'admin') state = {view: false, edit: false, add:false, delete: false};\n            else if(this.state.dataSelect.userrole === 'moderator') state = {view: false, edit: false, add:false, delete: true};\n            else if (this.state.dataSelect.userrole === 'viewer') state = {view: false, edit: true, add: false, delete: true};\n            else state = {view: true, edit: true, add: false, delete: true};\n        } else state = {view: true, edit: true, add: false, delete: true};\n      }\n     // this.state.stateButton = state;\n   //  console.log(state)\n      this.setState({stateButton: state});\n  }\n\n  render() {\n\n    var data = this.state.dataElement;\n    var items = [];\n   \n    if (data !== undefined){\n      for(var i = 0; i < data.length ; i++){\n     \n        if(i === this.state.indexSelect) items[i] = <ElementCard \n                                                      dataCard={data[i]} \n                                                      callback={this.notifyIdSelect.bind(this)} \n                                                      classCard='card-accent-primary' \n                                                      key={i} \n                                                      index={i}\n                                                      ></ElementCard>;\n        else items[i] = <ElementCard \n                            dataCard={data[i]} \n                            callback={this.notifyIdSelect.bind(this)} \n                            classCard='' \n                            key={i} \n                            index={i}\n                            ></ElementCard>;\n      }\n    }\n\n    \n    \n    return (\n      <div className=\"animated fadeIn\">\n     \n        <ButtonToolbar className=\"mb-3\">\n                  <ButtonGroup className=\"mr-2\">\n                    <Button \n                     disabled={this.state.stateButton.view} \n                      color=\"primary\" \n                      onClick={this.handleView.bind(this)}>\n                        View\n                    </Button>\n\n                    <Button \n                       disabled={this.state.stateButton.add} \n                      color=\"primary\" \n                      onClick={this.state.callbackModalAdd}>\n                        Add\n                    </Button>\n\n                    <Button \n                      disabled={this.state.stateButton.edit} \n                      color=\"primary\" \n                      onClick={this.callbackEdit}>\n                        Edit\n                    </Button>\n\n                    <Button\n                      color=\"primary\"\n                      disabled={this.state.stateButton.delete} \n                    >\n                      Delete\n                    </Button>\n                  </ButtonGroup>\n        </ButtonToolbar>\n\n          <Row>\n            {items}\n          </Row>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ElementGroup);\n"],"sourceRoot":""}