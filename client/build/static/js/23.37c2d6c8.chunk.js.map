{"version":3,"sources":["views/Team/GroupFormAdd.js","views/Team/GroupeFormEdit.js","views/Team/UserAdd.js","views/Team/UserEdit.js","views/Team/Team.js","views/Items/ElementCard/index.js","views/Items/ElementCard/ElementGroup.js"],"names":["GroupFormAdd","state","modal","callback","undefined","teamId","name","description","this","props","clearStateForm","setState","TeamsManager","createGroup","res","json","handleClose","handleName","handleDescription","_this2","react_default","a","createElement","Modal","isOpen","toggle","ModalHeader","ModalBody","Row","Col","xs","Card","CardHeader","CardBody","FormGroup","Label","htmlFor","Input","onChange","event","target","value","type","id","placeholder","required","ModalFooter","Button","color","onClick","handleAction","bind","Component","GroupeFormEdit","groupData","teamid","equal","nameitem","descitem","updateGroup","key","_this3","UserAdd","term","datauser","idSelect","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","handleTerm","stop","_callee2","_context2","getUsetTeamComp","sent","addUserTeam","row","isSelected","e","_id","_this4","selectRowUser","onSelect","onRowSelectUser","mode","lib","data","selectRow","version","hidden","dataField","isKey","UserEdit","userId","userrole","roleTab","role","updateUserTeam","handleRole","option","i","length","defaultValue","enumRole","getValueOfRole","Team","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","modalEdit","modalUserAdd","modalUserEdit","stateOfButtonUser","add","edit","delete","userIdSelect","userSelect","getId","idT","getGroupTeam","match","params","getData","setInterval","_callee4","_context4","b","_this5","users","forEach","user","items","groups","redirectPath","push","roleEdit","userselectrole","x","slice","getTableRole","className","ElementGroup","callbackDataSelect","updateGroupData","dataElement","callbackEdit","toggleEdit","Team_GroupFormAdd","Team_GroupeFormEdit","ButtonToolbar","ButtonGroup","disabled","toggleUserAdd","toggleUserEdit","Team_UserAdd","Team_UserEdit","ElementCard","dataCard","idCard","classCard","item","changeElementCard","setRedirect","history","index","sm","md","lg","withRouter","teamUserRole","indexSelect","dataSelect","callbackModalAdd","callbackModalEdit","stateButton","view","elements","itemsRef","updateDataselect","dataelem","stateOfButton","Items_ElementCard","notifyIdSelect","handleView"],"mappings":"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","file":"static/js/23.37c2d6c8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport TeamsManager from '../../service/team/TeamsManager';\n\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    Row,\n    Col,\n    CardHeader,\n    CardBody,\n    Label,\n    FormGroup,\n    Card,\n    Input } from 'reactstrap';\n    \nclass GroupFormAdd extends Component {\n\n    state = {\n        modal: false,\n        callback: undefined,\n        teamId: \"\",\n        name: \"\",\n        description: \"\"\n    }\n\n    componentDidUpdate(){\n        \n        const {modal} = this.props;\n        const {callback} = this.props;\n        const {teamId} = this.props;\n\n        if(modal !== this.state.modal) {\n            if(modal === false)  this.clearStateForm(); \n            this.setState({modal: modal});\n        }\n\n        if( teamId !== this.state.teamId) this.setState({teamId: teamId});\n        if( callback !== this.state.callback) this.setState({callback: callback});\n\n    }\n\n    handleName(name){\n        this.setState({name: name});\n       \n    }\n\n    handleDescription(description){\n        this.setState({description: description});\n    }\n\n    async handleAction(){\n        var res = await TeamsManager.createGroup(this.state.teamId,this.state.name,this.state.description);\n        res = await res.json();\n        this.handleClose();\n    }\n\n    clearStateForm(){\n        this.handleName(\"\");\n        this.handleDescription(\"\");\n    }\n\n    handleClose(){\n        this.clearStateForm();\n        this.state.callback();\n    }\n\n    render(){\n        return (\n            <Modal isOpen={this.state.modal} toggle={this.state.callback} >\n            <ModalHeader toggle={this.state.callback}>Teams modal</ModalHeader>\n            <ModalBody>\n            <Row>\n                <Col xs=\"12\" >\n                <Card>\n                    <CardHeader>\n                    <strong>Group</strong>\n                    <small> Form</small>\n                    </CardHeader>\n                    <CardBody>\n                    <Row>\n                        <Col xs=\"12\">\n                        <FormGroup>\n                            <Label htmlFor=\"name\">Name</Label>\n                            <Input  onChange={event => this.handleName(event.target.value)} type=\"text\" id=\"name\" placeholder=\"Enter group name\" required />\n                        </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs=\"12\">\n                        <FormGroup>\n                            <Label htmlFor=\"description\">Description</Label>\n                            <Input onChange={event => this.handleDescription(event.target.value)} type=\"text\" id=\"description\" placeholder=\"Enter group description\" required />\n                        </FormGroup>\n                        </Col>\n                    </Row>\n                    </CardBody>\n                </Card>\n                </Col>\n                </Row>\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"primary\" onClick={this.handleAction.bind(this)}>Create group</Button>{' '}\n                <Button color=\"secondary\" onClick={this.state.callback}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n        );\n    }\n}\n\nexport default GroupFormAdd;","import React, { Component } from 'react';\nimport TeamsManager from '../../service/team/TeamsManager';\nimport equal from 'deep-equal';\n\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    Row,\n    Col,\n    CardHeader,\n    CardBody,\n    Label,\n    FormGroup,\n    Card,\n    Input } from 'reactstrap';\n    \nclass GroupeFormEdit extends Component {\n\n    state = {\n        modal: false,\n        callback: undefined,\n        groupData: {},\n        name: \"\",\n        description: \"\",\n        teamid: \"\"\n    }\n\n    componentDidUpdate(){\n        const {modal} = this.props;\n        const {callback} = this.props;\n        const {groupData} = this.props;\n        const {teamid} = this.props;\n\n        if(modal !== this.state.modal) {\n            if(modal === false)  this.clearStateForm(); \n            this.setState({modal: modal});\n        }\n\n        if( callback !== this.state.callback) this.setState({callback: callback});\n       // console.log(equal(this.state.groupData, groupData))\n\n        if( groupData !== undefined && !equal(this.state.groupData, groupData)) {\n        //    console.log(\"TEAM DATA EDDIT FORM\")\n       // console.log(groupData);\n            this.setState({groupData: groupData},\n                ()=> {\n                    this.handleName(this.state.groupData.nameitem);\n                    this.handleDescription(this.state.groupData.descitem);\n                });  \n        }\n\n        if(teamid != this.state.teamid) this.setState({teamid: teamid});\n    }\n\n    handleName(name){\n        this.setState({ name: name});\n    }\n\n    handleDescription(description){\n        this.setState({ description: description});\n    }\n\n    async handleAction(){\n        var res = await TeamsManager.updateGroup(this.state.teamid, this.state.groupData.key, this.state.name,this.state.description);\n        res = await res.json();\n        this.handleClose();\n    }\n\n    clearStateForm(){\n        this.handleName(this.state.groupData.nameitem);\n        this.handleDescription(this.state.groupData.descitem);\n    }\n\n    handleClose(){\n        this.clearStateForm();\n        this.state.callback();\n    }\n\n    render(){\n           \n        return (\n            <Modal isOpen={this.state.modal} toggle={this.state.callback} >\n            <ModalHeader toggle={this.state.callback}>Teams modal</ModalHeader>\n            <ModalBody>\n            <Row>\n                <Col xs=\"12\" >\n                <Card>\n                    <CardHeader>\n                    <strong>Team</strong>\n                    <small> Form</small>\n                    </CardHeader>\n                    <CardBody>\n                    <Row>\n                        <Col xs=\"12\">\n                        <FormGroup>\n                            <Label htmlFor=\"name\">Name</Label>\n                            <Input  onChange={event => this.handleName(event.target.value)} value={this.state.name} type=\"text\" id=\"name\" placeholder=\"Enter group name\" required />\n                        </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs=\"12\">\n                        <FormGroup>\n                            <Label htmlFor=\"description\">Description</Label>\n                            <Input onChange={event => this.handleDescription(event.target.value)} value={this.state.description} type=\"text\" id=\"description\" placeholder=\"Enter group description\" required />\n                        </FormGroup>\n                        </Col>\n                    </Row>\n                    </CardBody>\n                </Card>\n                </Col>\n                </Row>\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"primary\" onClick={this.handleAction.bind(this)}>Edit team</Button>{' '}\n                <Button color=\"secondary\" onClick={this.state.callback}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n        );\n    }\n}\n\nexport default GroupeFormEdit;","import React, { Component } from 'react';\nimport TeamsManager from '../../service/team/TeamsManager';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport equal from 'deep-equal';\n\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    Row,\n    Col,\n    CardHeader,\n    CardBody,\n    Label,\n    FormGroup,\n    Card,\n    Input } from 'reactstrap';\n    \nclass UserAdd extends Component {\n\n    state = {\n        modal: false,\n        callback: undefined,\n        teamId: \"\",\n        term: \"\",\n        datauser: [],\n        idSelect: undefined\n    }\n\n    componentDidUpdate(){\n        \n        const {modal} = this.props;\n        const {callback} = this.props;\n        const {teamId} = this.props;\n\n        if(modal !== this.state.modal) {\n            if(modal === false)  this.clearStateForm(); \n            this.setState({modal: modal});\n        }\n\n        if( teamId !== this.state.teamId) this.setState({teamId: teamId},async () => {await this.handleTerm(\"\");});\n        if( callback !== this.state.callback) this.setState({callback: callback});\n\n    }\n\n    async handleTerm(term){\n        if(this.state.term != term){\n            this.setState({term: term},\n                async () => {\n                    var res = await TeamsManager.getUsetTeamComp(this.state.teamId,this.state.term)\n                    if(!equal(res,this.state.datauser)) this.setState({datauser: res});\n                });\n        }\n    }\n\n    async handleAction(){\n        if(this.state.idSelect != undefined){\n            await TeamsManager.addUserTeam(this.state.teamId, this.state.idSelect);\n        }\n        this.handleClose();\n    }\n\n    clearStateForm(){\n        this.handleTerm(\"\");\n        this.setState({idSelect: undefined})\n    }\n\n    handleClose(){\n        this.clearStateForm();\n        this.state.callback();\n    }\n\n    onRowSelectUser(row, isSelected, e) {\n        if(this.state.idSelect != row._id) this.setState({idSelect: row._id});\n      //  console.log(row._id)\n    }\n\n    render(){\n\n        const selectRowUser = {\n            onSelect: this.onRowSelectUser.bind(this),\n            mode: 'radio'\n          };\n        \n          var datauser = this.state.datauser;\n\n        return (\n            <Modal isOpen={this.state.modal} toggle={this.state.callback} >\n            <ModalHeader toggle={this.state.callback}>Team modal</ModalHeader>\n            <ModalBody>\n            <Row>\n                <Col xs=\"12\" >\n                <Card>\n                    <CardHeader>\n                    <strong>User</strong>\n                    <small> add </small>\n                    </CardHeader>\n                    <CardBody>\n                    <BootstrapTable data={datauser} selectRow={selectRowUser} version=\"4\">\n                        <TableHeaderColumn hidden dataField='_id' isKey>ID</TableHeaderColumn>\n                        <TableHeaderColumn dataField='name'>Username</TableHeaderColumn>\n                    </BootstrapTable>\n                    <Row>\n                        <Col xs=\"12\">\n                        <FormGroup>\n                            <Label htmlFor=\"name\">Username</Label>\n                            <Input  onChange={event => this.handleTerm(event.target.value)} type=\"text\" id=\"name\" placeholder=\"Enter group name\" required />\n                        </FormGroup>\n                        </Col>\n                    </Row>\n                    </CardBody>\n                </Card>\n                </Col>\n                </Row>\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"primary\" onClick={this.handleAction.bind(this)}>Add user</Button>{' '}\n                <Button color=\"secondary\" onClick={this.state.callback}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n        );\n    }\n}\n\nexport default UserAdd;","import React, { Component } from 'react';\nimport TeamsManager from '../../service/team/TeamsManager';\n\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    Row,\n    Col,\n    CardHeader,\n    CardBody,\n    Label,\n    FormGroup,\n    Card,\n    Input } from 'reactstrap';\n    \nclass UserEdit extends Component {\n\n    state = {\n        modal: false,\n        callback: undefined,\n        teamId: undefined,\n        userId: undefined,\n        userrole: \"\", \n        roleTab: []\n    }\n\n    componentDidUpdate(){\n        \n        const {modal} = this.props;\n        const {callback} = this.props;\n        const {teamId} = this.props;\n        const {userId} = this.props;\n        const {roleTab} = this.props;\n\n        if(modal !== this.state.modal) {\n            if(modal === false)  this.clearStateForm(); \n            this.setState({modal: modal});\n        }\n        if( teamId !== this.state.teamId) this.setState({teamId: teamId});\n        if( userId !== this.state.userId) this.setState({userId: userId});\n        if( callback !== this.state.callback) this.setState({callback: callback});\n        if( roleTab !== this.state.roleTab ) this.setState({roleTab: roleTab});\n    }\n\n    async handleRole(role){\n       if(this.state.userrole != role) this.setState({userrole: role});\n    }\n\n    async handleAction(){\n    //    console.log(this.state)\n        if(this.state.userrole != \"\" && this.state.teamId != undefined && this.state.userId != undefined){\n            var res = await TeamsManager.updateUserTeam(this.state.teamId, this.state.userId, this.state.userrole)\n        }\n        \n        this.handleClose();\n    }\n\n    clearStateForm(){\n        this.handleRole(\"user\");\n    }\n\n    handleClose(){\n        this.clearStateForm();\n        this.state.callback();\n    }\n\n    render(){\n        var option = [];\n        for(var i = 0; i < this.state.roleTab.length; i++){\n            option[i] = <option key={i} value={this.state.roleTab[i]}>{this.state.roleTab[i]}</option>;\n        }\n        return (\n            <Modal isOpen={this.state.modal} toggle={this.state.callback} >\n            <ModalHeader toggle={this.state.callback}>Team modal</ModalHeader>\n            <ModalBody>\n            <Row>\n                <Col xs=\"12\" >\n                <Card>\n                    <CardHeader>\n                    <strong>User</strong>\n                    <small> edit </small>\n                    </CardHeader>\n                    <CardBody>\n\n                    <Row>\n                        <Col xs=\"12\">\n                        <FormGroup>\n                            <Label htmlFor=\"role\">Role</Label>\n                        <Input placeholder=\"Select role\" defaultValue=\"\" onChange={event => this.handleRole(event.target.value)} type=\"select\" name=\"role\" id=\"role\">\n                    \n                        {option}\n                      </Input>\n\n                        </FormGroup>\n                        </Col>\n                    </Row>\n                    </CardBody>\n                </Card>\n                </Col>\n                </Row>\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"primary\" onClick={this.handleAction.bind(this)}>Edit role user</Button>{' '}\n                <Button color=\"secondary\" onClick={this.state.callback}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n        );\n    }\n}\n\nexport default UserEdit;","import React, { Component } from 'react';\nimport ElementGroup from '../Items/ElementCard/ElementGroup';\nimport TeamsManager from '../../service/team/TeamsManager';\nimport GroupFormAdd from './GroupFormAdd'\nimport equal from 'deep-equal';\nimport GroupeFormEdit from './GroupeFormEdit'\nimport UserAdd from './UserAdd'\nimport {Button, ButtonToolbar, ButtonGroup, Card, CardHeader, CardBody } from 'reactstrap';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport UserEdit from './UserEdit'\n\n//TODO passez en import\nvar enumRole = [\n  'dev',\n  'admin',\n  'moderator',\n  'viewer',\n  'user'\n];\n\nfunction getValueOfRole(role) {\n  for (var i = 0; i < enumRole.length; i++) {\n      if (enumRole[i] == role) return i;\n  }\n  return -1;\n};\n\nfunction getTableRole(userrole,userselectrole){\n  var x = getValueOfRole(userrole);\n  var i = getValueOfRole(userselectrole);\n  if( x+1 < i && x+1 < enumRole.length){\n    return enumRole.slice(x+1,enumRole.length);\n  }\n  else return [];\n}\n\nclass Team extends Component {\n\n  state = {\n    id: undefined,\n    groupData: {},\n    data: [], \n    modalEdit: false,\n    modal: false,\n    modalUserAdd: false,\n    modalUserEdit: false,\n    stateOfButtonUser : { add: true, edit: true, delete: true },\n    userIdSelect: undefined, \n    userSelect: undefined\n  }\n\n  constructor(props){\n    super(props);\n     //\n  }\n\n  setId (idT) {\n     this.setState({\n      id: idT\n    })\n  }\n\n  getId = () => {\n    return this.state.id;\n  }\n\n  async getData(){\n\n    if(this.state.id !== undefined){\n      var data = await TeamsManager.getGroupTeam(this.state.id);\n      if(!equal(this.state.data, data)){\n    //    console.log(data)\n          this.setState({data: data}, () => {\n            this.stateOfButtonUser();\n          });\n      }\n    }\n  }\n\n  async componentDidMount(){\n    var id = this.props.match.params.id;\n    if(this.state.id !== id) {\n      this.setState({id: id}, async () => {\n        await this.getData()\n      });\n    }\n    setInterval(() => {this.getData()},5*60000);\n  }\n\n  async componentDidUpdate(){\n    var id = this.props.match.params.id;\n    if(this.state.id !== id) {\n      this.setState({id: id}, async () => {await this.getData()});\n    }\n  }\n\n  updateGroupData(data){\n    this.setState({groupData: data});\n  }\n\n  async toggle(){\n    var b = this.state.modal;\n    this.setState({modal: !b});\n    if(b === true) await this.getData();\n  }\n\n  async toggleEdit(){\n    var b = false;\n    b = this.state.modalEdit;\n    this.setState({modalEdit: !b});\n    if(b === true) await this.getData();\n  }\n\n  async toggleUserAdd(){\n    var b = this.state.modalUserAdd;\n    this.setState({modalUserAdd: !b});\n    if(b === true) await this.getData();\n  }\n\n  async toggleUserEdit(){\n    var b = this.state.modalUserEdit;\n    this.setState({modalUserEdit: !b});\n    if(b === true) await this.getData();\n  }\n\n  onRowSelectUser(row, isSelected, e) {\n   // console.log(row.id)\n    this.setState({userIdSelect: row.id}, () => {\n      this.state.data.users.forEach((user) => {\n        if(user.id == this.state.userIdSelect){\n            this.setState({userSelect: user},\n              () => {\n                this.stateOfButtonUser()\n              });\n        }\n      })\n    });\n  }\n\n  stateOfButtonUser(){\n    var state = { add: true, edit: true, delete: true };\n   // console.log(this.state.data.userrole)\n  //  console.log(this.state.userIdSelect)\n  //  console.log(this.state.userSelect)\n    if(this.state.userSelect !== undefined){\n       var i = getValueOfRole(this.state.data.userrole);\n       var x = getValueOfRole(this.state.userSelect.role);\n       if( i < x) { state.edit = false; state.delete = false; }\n    }\n\n    if(this.state.data.userrole == 'admin' || this.state.data.userrole == 'moderator') {\n      state.add = false;\n    }\n\n    if(!equal(this.state.stateOfButtonUser, state)) {\n      this.setState({stateOfButtonUser: state});\n    }\n\n  }\n\n  render() {\n\n   \n/*\n\n         \n<ElementGroup ></ElementGroup>\n*/\n    var items = [];\n    var data = this.state.data.groups;\n    var datauser = [];\n\n    if(data !== undefined) {\n      for(var i = 0; i < data.length; i++){\n        var redirectPath = \"/group?teamid=\"+this.state.data._id+\"&groupid=\"+data[i]._id;\n          items.push({\n            key: data[i]._id,\n            nameitem: data[i].name,\n            descitem: data[i].description,\n            redirectPath: redirectPath,\n            userrole: data[i].userrole \n          });\n      }\n    }\n\n    if(this.state.data.users !== undefined){\n      datauser = this.state.data.users;\n    }\n\n    var roleEdit = []; \n    if(this.state.data.userrole != undefined && this.state.userSelect != undefined){\n        roleEdit = getTableRole(this.state.data.userrole,this.state.userSelect.role); \n    }\n   \n    const selectRowUser = {\n      onSelect: this.onRowSelectUser.bind(this),\n      mode: 'radio'\n    };\n\n    return (\n\n          <div className=\"animated fadeIn mt-3\">\n\n          <strong><h2>Team name : {this.state.data.name}</h2></strong>\n          <Card>\n            <CardHeader>\n            <strong><h2>Groups of team</h2></strong>\n            </CardHeader>\n            <CardBody>\n\n            <ElementGroup \n                callbackDataSelect={this.updateGroupData.bind(this)} \n                dataElement={items} \n                callback={this.toggle.bind(this)} \n                callbackEdit={this.toggleEdit.bind(this)}\n                userrole={this.state.data.userrole}\n                > \n                \n          </ElementGroup>\n\n          <GroupFormAdd modal={this.state.modal} callback={this.toggle.bind(this)} teamId={this.state.id}></GroupFormAdd>\n          <GroupeFormEdit modal={this.state.modalEdit} callback={this.toggleEdit.bind(this)} groupData={this.state.groupData} teamid={this.state.id}></GroupeFormEdit>\n\n          </CardBody>\n          </Card>\n          \n          <Card>\n            <CardHeader>\n            <strong><h2>User of team</h2></strong>\n            </CardHeader>\n            <CardBody>\n                            <ButtonToolbar className=\"mb-3\">\n                        <ButtonGroup className=\"mr-2\">\n                            <Button  disabled={this.state.stateOfButtonUser.add} color=\"primary\" onClick={this.toggleUserAdd.bind(this)}> Add </Button>\n                            <Button  disabled={this.state.stateOfButtonUser.edit} color=\"primary\" onClick={this.toggleUserEdit.bind(this)}> Edit </Button>\n                            <Button  disabled={this.state.stateOfButtonUser.delete} color=\"primary\"> Delete </Button>\n                        </ButtonGroup>    \n                    </ButtonToolbar>\n\n                    <BootstrapTable data={datauser} selectRow={selectRowUser} version=\"4\">\n                        <TableHeaderColumn hidden dataField='id' isKey>Product ID</TableHeaderColumn>\n                        <TableHeaderColumn dataField='name'>Username</TableHeaderColumn>\n                        <TableHeaderColumn dataField='role'>Role</TableHeaderColumn>\n                    </BootstrapTable>\n            </CardBody>\n\n            <UserAdd modal={this.state.modalUserAdd} callback={this.toggleUserAdd.bind(this)} teamId={this.state.id}></UserAdd>\n            <UserEdit roleTab={roleEdit} modal={this.state.modalUserEdit} callback={this.toggleUserEdit.bind(this)} teamId={this.state.id} userId={this.state.userIdSelect} ></UserEdit>\n        </Card>\n\n         \n          </div>\n\n\n          \n    \n    );\n  }\n}\n\nexport default Team;\n","import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Label } from 'reactstrap';\nimport {withRouter} from 'react-router-dom';\nimport equal from 'deep-equal';\n\nclass ElementCard extends Component {\n\n    state = {\n        dataCard: {},\n        idCard: undefined,\n        classCard: \"\",\n        item : undefined\n    }\n\n    getId(){\n        return this.state.dataCard.key;\n    }\n\n    changeElementCard = (value) => {\n        this.setState({\n            classCard: this.props.classCard\n        });\n    }\n\n    updateDataCard(){\n        this.setState({dataCard: this.props.dataCard});\n    }\n\n    constructor(props){\n        super(props);\n        this.index = props.index;\n        this.callback = props.callback;\n        this.state.dataCard = props.dataCard;\n    }\n\n     componentDidUpdate() {\n        const { classCard } = this.props;\n        if (this.state.classCard !== classCard) this.changeElementCard(classCard);\n        const {dataCard} = this.props;\n        if(!equal(this.state.dataCard,dataCard)) this.setState({dataCard: this.props.dataCard});\n      }\n\n    setRedirect = () => {\n        this.props.history.push(this.redirectPath);\n    }\n\n    handleClickCard(){\n        \n    }\n\n    render(){\n\n\n                /*\ndescitem: \"Desc\"\nkey: \"5db41fa83a8e232ed4ceaefe\"\nnameitem: \"FirstssUpdate\"\nredirectPath: \"/team/5db41fa83a8e232ed4ceaefe\"\nuserrole: \"viewer\"\n*/\n\n\n        return ( \n                    <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\" >    \n                     \n                    <Card onClick={() => this.callback(this.index,this.getId())} className={this.state.classCard} >\n                      <CardHeader>\n                          <Row>\n                              <Col xs=\"12\" className=\"d-flex align-items-center\"> \n                                <strong>{ this.state.dataCard.nameitem }</strong>\n                              </Col>\n                          </Row>\n                      </CardHeader>\n                      <CardBody>\n                        <Row>\n                          <Col xs=\"12\">\n                              <Label><strong>Description</strong></Label>\n                              <p>{ this.state.dataCard.descitem }</p>\n                          </Col>\n                          <Col xs=\"12\">\n                              <Label><strong>Role</strong></Label>\n                              <p>{ this.state.dataCard.userrole }</p>\n                          </Col>\n                        </Row>\n                      </CardBody>\n                    </Card>\n                  </Col>\n              \n        );\n    }\n}\n\nexport default withRouter(ElementCard);","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport ElementCard from '.';\nimport equal from 'deep-equal';\n\nimport {\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Row,\n  } from 'reactstrap';\n\nclass ElementGroup extends Component {\n\n    state = {\n      teamid: undefined,\n      teamUserRole: undefined,\n      indexSelect: undefined,\n      idSelect: undefined,\n      dataSelect: {},\n      dataElement: [],\n      callbackModalAdd: undefined,\n      callbackModalEdit: undefined,\n      stateButton: {\n        view: true,\n        edit: true,\n        add: true,\n        delete: true\n      },\n      modal: false,\n      classCard: '',\n      elements: {\n        callback: undefined,\n        items: []\n      }\n    };\n    \n    constructor(props){\n        super(props);\n        this.items = [];\n        this.itemsRef = [];\n        this.state.modal = false;\n        this.state.callbackModalAdd = props.callback;\n        this.callbackDataSelect = props.callbackDataSelect;\n        this.callbackEdit = props.callbackEdit;\n    }\n\n    notifyIdSelect(index,id){\n      if(this.state.indexSelect === index && this.state.idSelect === id) {\n        this.setState({indexSelect: undefined, idSelect: undefined},\n          () => { \n            /*this.callbackDataSelect(this.state.dataSelect)*/\n            this.updateDataselect();\n            ;});\n      }\n      else {\n        this.setState({indexSelect: index, idSelect: id},\n          () => {\n        //    this.callbackDataSelect(this.state.dataSelect); \n          //  this.stateOfButton();\n            this.updateDataselect();\n          })\n      }\n     \n    }\n\n    updateDataselect(){\n      var data = this.state.dataElement;\n      var dataelem = data[this.state.indexSelect]\n      if(!equal(dataelem,this.state.dataSelect)){\n        this.setState({dataSelect: dataelem},\n          () => {\n            this.stateOfButton();\n            this.callbackDataSelect(this.state.dataSelect);\n          });\n      }\n    }\n\n    componentDidMount(){\n      var state = {view: true, edit: true, add: false, delete: true};\n      this.setState({stateButton: state});\n    }\n\n    componentDidUpdate(){\n      const { dataElement } = this.props;\n        if (!equal(this.state.dataElement,dataElement)) {\n        //  console.log(\"CONTEXT have change\")\n          this.setState(\n            {dataElement: this.props.dataElement},  \n            () => { this.updateDataselect();}\n          );\n        }\n        const {userrole } = this.props;\n        if(this.state.teamUserRole !== userrole) {\n          this.setState({teamUserRole: userrole}, this.stateOfButton());\n        }\n    }\n\n  handleView(){\n   // console.log(this.state.dataSelect.redirectPath);\n   if(this.state.dataSelect != undefined){\n    this.props.history.push(this.state.dataSelect.redirectPath);\n   }\n  }\n\n  stateOfButton(){\n    var state = {view: true, edit: true, add: true, delete: true};\n      if(this.state.teamUserRole !== undefined){\n        if(this.state.teamUserRole === 'admin') state = {view: false, edit: false, add:false, delete: false};\n        else if(this.state.teamUserRole === 'moderator')state = {view: false, edit: false, add:false, delete: true};\n        else {\n          if(this.state.dataSelect !== undefined && this.state.teamUserRole === 'viewer'){\n            if(this.state.dataSelect.userrole === 'admin') state = {view: false, edit: false, add:true, delete: false};\n            else if(this.state.dataSelect.userrole === 'moderator') state = {view: false, edit: false, add:true, delete: true};\n            else if (this.state.dataSelect.userrole === 'viewer') state = {view: false, edit: true, add: true, delete: true};\n            else state = {view: true, edit: true, add: true, delete: true};\n          } else state = {view: true, edit: true, add: true, delete: true};\n        }\n      } else {\n        if(this.state.dataSelect !== undefined){\n            if(this.state.dataSelect.userrole === 'admin') state = {view: false, edit: false, add:false, delete: false};\n            else if(this.state.dataSelect.userrole === 'moderator') state = {view: false, edit: false, add:false, delete: true};\n            else if (this.state.dataSelect.userrole === 'viewer') state = {view: false, edit: true, add: false, delete: true};\n            else state = {view: true, edit: true, add: false, delete: true};\n        } else state = {view: true, edit: true, add: false, delete: true};\n      }\n     // this.state.stateButton = state;\n   //  console.log(state)\n      this.setState({stateButton: state});\n  }\n\n  render() {\n\n    var data = this.state.dataElement;\n    var items = [];\n   \n    if (data !== undefined){\n      for(var i = 0; i < data.length ; i++){\n     \n        if(i === this.state.indexSelect) items[i] = <ElementCard \n                                                      dataCard={data[i]} \n                                                      callback={this.notifyIdSelect.bind(this)} \n                                                      classCard='card-accent-primary' \n                                                      key={i} \n                                                      index={i}\n                                                      ></ElementCard>;\n        else items[i] = <ElementCard \n                            dataCard={data[i]} \n                            callback={this.notifyIdSelect.bind(this)} \n                            classCard='' \n                            key={i} \n                            index={i}\n                            ></ElementCard>;\n      }\n    }\n\n    \n    \n    return (\n      <div className=\"animated fadeIn\">\n     \n        <ButtonToolbar className=\"mb-3\">\n                  <ButtonGroup className=\"mr-2\">\n                    <Button \n                     disabled={this.state.stateButton.view} \n                      color=\"primary\" \n                      onClick={this.handleView.bind(this)}>\n                        View\n                    </Button>\n\n                    <Button \n                       disabled={this.state.stateButton.add} \n                      color=\"primary\" \n                      onClick={this.state.callbackModalAdd}>\n                        Add\n                    </Button>\n\n                    <Button \n                      disabled={this.state.stateButton.edit} \n                      color=\"primary\" \n                      onClick={this.callbackEdit}>\n                        Edit\n                    </Button>\n\n                    <Button\n                      color=\"primary\"\n                      disabled={this.state.stateButton.delete} \n                    >\n                      Delete\n                    </Button>\n                  </ButtonGroup>\n        </ButtonToolbar>\n\n          <Row>\n            {items}\n          </Row>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ElementGroup);\n"],"sourceRoot":""}